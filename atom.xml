<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zunney的博客</title>
  
  <subtitle>功成名就不是目的，让自己快乐才叫做意义</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="//zunney.cn/"/>
  <updated>2019-01-20T07:16:09.979Z</updated>
  <id>//zunney.cn/</id>
  
  <author>
    <name>Zunney</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>gnome常用插件</title>
    <link href="//zunney.cn/2019/01/20/gnome%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6/"/>
    <id>//zunney.cn/2019/01/20/gnome常用插件/</id>
    <published>2019-01-20T06:57:06.000Z</published>
    <updated>2019-01-20T07:16:09.979Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>打造一款属于自己的gonme桌面需要用到的插件</p></blockquote><a id="more"></a><h2 id="自动隐藏电池"><a href="#自动隐藏电池" class="headerlink" title="自动隐藏电池"></a><a href="https://extensions.gnome.org/extension/595/autohide-battery/" target="_blank" rel="noopener">自动隐藏电池</a></h2><blockquote><p>如果电池已充满电并且已连接AC，请隐藏顶部面板中的电池图标。</p></blockquote><h2 id="咖啡因"><a href="#咖啡因" class="headerlink" title="咖啡因"></a><a href="https://extensions.gnome.org/extension/517/caffeine/" target="_blank" rel="noopener">咖啡因</a></h2><blockquote><p>禁用屏幕保护程序并自动暂停</p></blockquote><h2 id="剪贴板指示器"><a href="#剪贴板指示器" class="headerlink" title="剪贴板指示器"></a><a href="https://extensions.gnome.org/extension/779/clipboard-indicator/" target="_blank" rel="noopener">剪贴板指示器</a></h2><blockquote><p>Gnome-Shell的剪贴板管理器扩展 - 将剪贴板指示符添加到顶部面板，并缓存剪贴板历史记录。</p></blockquote><h2 id="Coverflow-Alt-Tab"><a href="#Coverflow-Alt-Tab" class="headerlink" title="Coverflow Alt-Tab"></a><a href="https://extensions.gnome.org/extension/97/coverflow-alt-tab/" target="_blank" rel="noopener">Coverflow Alt-Tab</a></h2><blockquote><p>替换Alt-Tab，以覆盖流方式遍历窗口。</p></blockquote><h2 id="短划线停靠"><a href="#短划线停靠" class="headerlink" title="短划线停靠"></a><a href="https://extensions.gnome.org/extension/307/dash-to-dock/" target="_blank" rel="noopener">短划线停靠</a></h2><blockquote><p>Gnome Shell的码头。此扩展将短划线移出概览，将其转换为扩展坞，以便更轻松地启动应用程序，并在窗口和桌面之间更快地切换。侧面和底部放置选项可用。</p></blockquote><h2 id="划线到面板"><a href="#划线到面板" class="headerlink" title="划线到面板"></a><a href="https://extensions.gnome.org/extension/1160/dash-to-panel/" target="_blank" rel="noopener">划线到面板</a></h2><blockquote><p>Gnome Shell的图标任务栏。此扩展将短划线移动到gnome主面板中，以便应用程序启动器和系统托盘组合成一个面板，类似于KDE Plasma和Windows 7+中的面板。不再需要单独的Dock，以便轻松访问正在运行和受欢迎的应用程序。</p></blockquote><h2 id="断开Wifi"><a href="#断开Wifi" class="headerlink" title="断开Wifi"></a><a href="https://extensions.gnome.org/extension/904/disconnect-wifi/" target="_blank" rel="noopener">断开Wifi</a></h2><blockquote><p>在连接网络时，在状态菜单中为Wifi添加“断开连接”选项。网络断开后显示重新连接选项。</p></blockquote><h2 id="扩展更新通知程序"><a href="#扩展更新通知程序" class="headerlink" title="扩展更新通知程序"></a><a href="https://extensions.gnome.org/extension/1166/extension-update-notifier/" target="_blank" rel="noopener">扩展更新通知程序</a></h2><blockquote><p>在扩展更新可用时显示通知。</p></blockquote><h2 id="互联网速度计"><a href="#互联网速度计" class="headerlink" title="互联网速度计"></a><a href="https://extensions.gnome.org/extension/1461/internet-speed-meter/" target="_blank" rel="noopener">互联网速度计</a></h2><blockquote><p>侏儒壳的简单和最小的互联网速度计。</p></blockquote><h2 id="OpenWeather"><a href="#OpenWeather" class="headerlink" title="OpenWeather"></a><a href="https://extensions.gnome.org/extension/750/openweather/" target="_blank" rel="noopener">OpenWeather</a></h2><blockquote><p>天气扩展可以显示来自<a href="https://openweathermap.org/或https://darksky.net的天气信息，适用于世界上几乎所有地点。" target="_blank" rel="noopener">https://openweathermap.org/或https://darksky.net的天气信息，适用于世界上几乎所有地点。</a></p></blockquote><h2 id="地点状态指示器"><a href="#地点状态指示器" class="headerlink" title="地点状态指示器"></a><a href="https://extensions.gnome.org/extension/8/places-status-indicator/" target="_blank" rel="noopener">地点状态指示器</a></h2><blockquote><p>添加菜单以快速导航系统中的位置。</p></blockquote><h2 id="可移动驱动器菜单"><a href="#可移动驱动器菜单" class="headerlink" title="可移动驱动器菜单"></a><a href="https://extensions.gnome.org/extension/7/removable-drive-menu/" target="_blank" rel="noopener">可移动驱动器菜单</a></h2><blockquote><p>用于访问和卸载可移动设备的状态菜单。</p></blockquote><h2 id="截图工具"><a href="#截图工具" class="headerlink" title="截图工具"></a><a href="https://extensions.gnome.org/extension/1112/screenshot-tool/" target="_blank" rel="noopener">截图工具</a></h2><blockquote><p>方便地创建，复制，存储和上传屏幕截图</p></blockquote><h2 id="声音输入和输出设备选择器"><a href="#声音输入和输出设备选择器" class="headerlink" title="声音输入和输出设备选择器"></a><a href="https://extensions.gnome.org/extension/906/sound-output-device-chooser/" target="_blank" rel="noopener">声音输入和输出设备选择器</a></h2><blockquote><p>在音量滑块下方的状态菜单中显示声音输出和输入设备列表（类似于gnome声音设置）。还显示相同设备的HDMI，扬声器等各种活动端口以供选择</p></blockquote><h2 id="系统监测"><a href="#系统监测" class="headerlink" title="系统监测"></a><a href="https://extensions.gnome.org/extension/120/system-monitor/" target="_blank" rel="noopener">系统监测</a></h2><blockquote><p>在gnome shell状态栏中显示系统信息，例如内存使用情况，CPU使用率，网络速率……</p></blockquote><h2 id="TopIcons-Plus"><a href="#TopIcons-Plus" class="headerlink" title="TopIcons Plus"></a><a href="https://extensions.gnome.org/extension/1031/topicons/" target="_blank" rel="noopener">TopIcons Plus</a></h2><blockquote><p>此扩展程序将传统托盘图标（Gnome Shell的左下角）移动到顶部面板。它是来自ag原始扩展的分支，具有图标不透明度，饱和度，填充，大小和托盘位置的设置，以及一些小修复和与Skype集成扩展的集成。</p></blockquote><h2 id="用户主题"><a href="#用户主题" class="headerlink" title="用户主题"></a><a href="https://extensions.gnome.org/extension/19/user-themes/" target="_blank" rel="noopener">用户主题</a></h2><blockquote><p>从用户目录加载shell主题。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;打造一款属于自己的gonme桌面需要用到的插件&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Ubuntu" scheme="//zunney.cn/categories/Ubuntu/"/>
    
    
      <category term="Ubuntu" scheme="//zunney.cn/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>在Ubuntu上搭建个人博客系统Hexo</title>
    <link href="//zunney.cn/2019/01/19/%E5%9C%A8Ubuntu%E4%B8%8A%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9FHexo/"/>
    <id>//zunney.cn/2019/01/19/在Ubuntu上搭建个人博客系统Hexo/</id>
    <published>2019-01-18T20:14:13.000Z</published>
    <updated>2019-01-20T06:58:04.110Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>ubuntu成为我的日常使用的系统后，特在网上摘取了一篇ubuntu搭建hexo的文章</p></blockquote><a id="more"></a><h2 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h2><h3 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h3><blockquote><p>sudo apt install git-core -y</p></blockquote><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><blockquote><p>wget -qO- <a href="https://raw.github.com/creationix/nvm/master/install.sh" target="_blank" rel="noopener">https://raw.github.com/creationix/nvm/master/install.sh</a> | sh<br>source ~/.profile<br>nvm install stable</p></blockquote><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><h3 id="安装-cnpm"><a href="#安装-cnpm" class="headerlink" title="安装 cnpm"></a>安装 cnpm</h3><blockquote><p>npm install -g cnpm –registry=<a href="https://registry.npm.taobao.org/" target="_blank" rel="noopener">https://registry.npm.taobao.org</a></p></blockquote><h3 id="安装-Hexo-1"><a href="#安装-Hexo-1" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><p>先创建一个文件夹，然后进入到文件夹开始安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir hexo</span><br><span class="line">cd hexo</span><br><span class="line">cnpm install -g hexo-cli</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure><h3 id="测试安装成功"><a href="#测试安装成功" class="headerlink" title="测试安装成功"></a>测试安装成功</h3><p><strong>打开 Hexo 服务</strong></p><blockquote><p>hexo server</p></blockquote><p>**此时打开浏览器访问自己【主机的ip：4000】就可以看到我们搭建成功的博客页面。但是这仅仅是本地的，接下来把博客部署到 GitHub 上面我们就可以脱离本地访问了。</p><h2 id="将博客部署到-GitHub"><a href="#将博客部署到-GitHub" class="headerlink" title="将博客部署到 GitHub"></a>将博客部署到 GitHub</h2><h3 id="注册-GitHub"><a href="#注册-GitHub" class="headerlink" title="注册 GitHub"></a>注册 GitHub</h3><p><strong>如果没有GitHub账户的先去去注册GitHub账户，有GitHub账户的直接下一步;</strong></p><h3 id="设置-user-name-和-user-email"><a href="#设置-user-name-和-user-email" class="headerlink" title="设置 user.name 和 user.email"></a>设置 user.name 和 user.email</h3><p><strong>注册好之后回来自己的机器上</strong></p><blockquote><p>git config –global user.name “Your user.name”<br>git config –global user.email “You user.email”<br>//“ “里面换成自己的user.name和user.email;</p></blockquote><h3 id="生成-shh-密匙"><a href="#生成-shh-密匙" class="headerlink" title="生成 shh 密匙"></a>生成 shh 密匙</h3><blockquote><p>ssh-keygen -t rsa -C user.email<br>**下面提示输入要保存到的路径，直接回车就行了，默认保存到/home/ubuntu/.ssh/id_rsa</p></blockquote><h3 id="查看-shh-密匙"><a href="#查看-shh-密匙" class="headerlink" title="查看 shh 密匙"></a>查看 shh 密匙</h3><blockquote><p>vim /home/ubuntu/.ssh/id_rsa</p></blockquote><p><strong>把密匙复制一下，接下来去 GitHub 账户下添加 SSH key；</strong></p><h3 id="在-GitHub-账户添加-SSH-key"><a href="#在-GitHub-账户添加-SSH-key" class="headerlink" title="在 GitHub 账户添加 SSH key"></a>在 GitHub 账户添加 SSH key</h3><p><strong>添加 ssh key ，点击传送；</strong></p><h3 id="创建-GitHub-仓库"><a href="#创建-GitHub-仓库" class="headerlink" title="创建 GitHub 仓库"></a>创建 GitHub 仓库</h3><blockquote><p>命名格式为”账户的userName”.github.io<br>例如 ： zhangsan.github.io</p></blockquote><p><strong>去创建GitHub仓库)</strong></p><h3 id="修改-hexo-配置文件"><a href="#修改-hexo-配置文件" class="headerlink" title="修改 hexo 配置文件"></a>修改 hexo 配置文件</h3><p><strong>进入到自己的hexo 安装目录下 ，打开_config.yml文件</strong></p><p><strong>修改下面这部分；</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;pre&gt;`deploy:</span><br><span class="line">   type: git</span><br><span class="line">    repo: git@github.com:(BoView)/(BoView).github.io.git #括号里面换成自己的用户名和仓库名,去掉括号</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//生成静态页面</span><br><span class="line">    hexo g</span><br><span class="line">    //将public文件内容部署到github仓库</span><br><span class="line">    hexo d</span><br><span class="line">    //这两条是常用的命令，后者也可以这样</span><br><span class="line">    hexo d -g</span><br><span class="line">    //或者</span><br><span class="line">    hexo g -d</span><br></pre></td></tr></table></figure><p><strong>如果部署遇到错误，先执行下面这条命令</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git –save</span><br></pre></td></tr></table></figure><blockquote><p>然后重新部署一下，<br>此时可以打开浏览器访问userName.github.io(GitHub仓库名)<br>即可以访问到搭建的博客页面<br>到这里基本完成任务了，但是我们想更完美一点，再绑定个域名，然后用域名访问岂不美哉；</p></blockquote><h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><h3 id="添加解析记录"><a href="#添加解析记录" class="headerlink" title="添加解析记录"></a>添加解析记录</h3><p><strong>去自己的域名下添加解析)</strong></p><blockquote><p>记录类型为 CNAME 主机记录为@ 线路选择默认，TTL选择600，记录值为github的仓库名userName.github.io</p></blockquote><h3 id="配置-hexo"><a href="#配置-hexo" class="headerlink" title="配置 hexo"></a>配置 hexo</h3><p><strong>创建CNAME配置文件</strong></p><blockquote><p>touch ~/hexo/source/CNAME</p></blockquote><p><strong>下面在CNAME配置文件里面添加刚才解析的域名</strong></p><blockquote><p>例如： zhangsan.com</p></blockquote><p><strong>然后重新部署一下，</strong></p><p><strong>ok，ok，恭喜大家，</strong></p><p><strong>此时打开浏览器访问自己的域名即可以访问自己搭建的博客</strong></p><p><strong>开启自己的【博客之旅】吧</strong></p><h2 id="hexo部署进阶命令"><a href="#hexo部署进阶命令" class="headerlink" title="hexo部署进阶命令"></a>hexo部署进阶命令</h2><h3 id="Hexo博文置顶（自定义排序）"><a href="#Hexo博文置顶（自定义排序）" class="headerlink" title="Hexo博文置顶（自定义排序）"></a>Hexo博文置顶（自定义排序）</h3><p>如果目前已经有修改后支持置顶的仓库，可以直接用以下命令安装。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure><p>使用的是top属性，top值越高，排序越在前，不设置top值得博文按照时间顺序排序。<br>修改Hexo文件夹下的node_modules/hexo-generator-index/lib/generator.js</p><p>打开在最后添加如下javascript代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">posts.data = posts.data.sort(function(a, b) &#123;</span><br><span class="line">if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义</span><br><span class="line">    if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排</span><br><span class="line">    else return b.top - a.top; // 否则按照top值降序排</span><br><span class="line">&#125;</span><br><span class="line">else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span><br><span class="line">    return -1;</span><br><span class="line">&#125;</span><br><span class="line">else if(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">    return 1;</span><br><span class="line">&#125;</span><br><span class="line">else return b.date - a.date; // 都没定义按照文章日期降序排</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在写文章的时候添加top属性就行了。</p><h3 id="hexo增加RSS"><a href="#hexo增加RSS" class="headerlink" title="hexo增加RSS"></a>hexo增加RSS</h3><p>在你 <code>Hexo</code> 站点目录下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>打开 <code>Hexo</code> 站点下的 <code>_config.yml</code> ,添加如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># feed</span><br><span class="line"># Dependencies: https://github.com/hexojs/hexo-generator-feed</span><br><span class="line">feed:</span><br><span class="line">  type: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  limit: 20</span><br><span class="line">  hub:</span><br><span class="line">  content:</span><br></pre></td></tr></table></figure><h3 id="本地搜索"><a href="#本地搜索" class="headerlink" title="本地搜索"></a>本地搜索</h3><p>在你站点的根目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><p>打开 <code>Hexo</code> 站点的 <code>_config.yml</code>,添加配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure><p>打开 <code>themes/next/_config.yml</code> ,搜索关键字 <code>local_search</code> ,设置为 <code>true</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># Local search</span><br><span class="line"># Dependencies: https://github.com/flashlab/hexo-generator-search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  # if auto, trigger search by changing input</span><br><span class="line">  # if manual, trigger search by pressing enter key or search button</span><br><span class="line">  trigger: auto</span><br><span class="line">  # show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 1</span><br></pre></td></tr></table></figure><h3 id="统计功能，统计功能-显示文章字数统计-阅读时长-总字数"><a href="#统计功能，统计功能-显示文章字数统计-阅读时长-总字数" class="headerlink" title="统计功能，统计功能,显示文章字数统计,阅读时长,总字数"></a>统计功能，统计功能,显示文章字数统计,阅读时长,总字数</h3><p>在站点的根目录下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure><p>打开 <code>themes/next/_config.yml</code> ，搜索关键字 <code>post_wordcount</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https://github.com/willin/hexo-wordcount</span><br><span class="line">post_wordcount:</span><br><span class="line">  item_text: true</span><br><span class="line">  #字数统计</span><br><span class="line">  wordcount: true</span><br><span class="line">  #预览时间</span><br><span class="line">  min2read: true</span><br><span class="line">  #总字数,显示在页面底部</span><br><span class="line">  totalcount: true</span><br><span class="line">  separated_meta: true</span><br></pre></td></tr></table></figure><p>本地站点推送到GitHub上</p><p>在站点更目录下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>在 <code>Hexo</code> 站点的 <code>_config.yml</code> 中配置 <code>deploy</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: &lt;repository url&gt; #your github.io.git</span><br><span class="line">  branch: master</span><br><span class="line">$ hexo clean</span><br><span class="line">$ hexo d --g</span><br></pre></td></tr></table></figure><blockquote><p>hexo g  #生成本地 public 静态文件, hexo d  #部署到 Github 上, 也可以缩写成：hexo g –d 。</p></blockquote><p><strong>本文章摘自与<a href="http://gcchen.cn" target="_blank" rel="noopener">gcchen的博客</a>，在此感谢！</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;ubuntu成为我的日常使用的系统后，特在网上摘取了一篇ubuntu搭建hexo的文章&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Ubuntu" scheme="//zunney.cn/categories/Ubuntu/"/>
    
      <category term="hexo" scheme="//zunney.cn/categories/Ubuntu/hexo/"/>
    
    
      <category term="hexo" scheme="//zunney.cn/tags/hexo/"/>
    
  </entry>
  
</feed>
