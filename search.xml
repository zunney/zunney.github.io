<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>%2F2019%2F05%2F24%2FLinux%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[title： Linux的基础命令date： 2019-05-15 18：27：13tags： Linuxcategories： [学习,Linux] top： 100 Linux的各命令的使用 基础命令ls命令-l 显示详细信息 -A 显示隐藏文件 alias别名touch创建文件mkdir创建文件夹mkdir {aa,bb,cc} 创建平级目录 mkdir aa/bb/cc -p 创建子集目录 pwd显示当前路径绝对路径与相对路径绝对路径从根目录出发 相对路径从当前目录出发 . 当前目录 .. 上一级目录 cp 复制拷贝-i 交互式 -f 强制 \ 转译符，让命令不接选项 -p 带权限拷贝 rm删除-v 显示删除过程 -r 递归删除 -f 强制删除 mv移动passwd命令passwd直接回车：修改当前用户的密码 echo redhat | passwd –stdin root echo root：passwd | chpasswd | 管道|：管道，两进程之间的链接机制 –stdin：基于键盘的标准输入 管道两边进程同时进行 linux目录结构linux是单树形目录结构 /：根目录 /bin：普通用户可执行程序 /sbin：系统用户的可执行程序 /home：普通用户的用户家目录 /media：光盘挂载点 /mnt：自定义挂载点 /tmp：临时文件，自带计划任务，隔一段时间会自动删除 vim 普通模式 1234567891011shift+d(D)：删除光标当前位置到行位。yy：复制一行p：粘贴u：回滚dd：删除一行y3↓：向下复制三行d3下：向下删除三行shift+g：将光标快速定位到文本末端gg：将光标快速定位到文本最前端Ctrl+v：块选择shift+v：行选择 编辑模式 12345678i：直接进入编辑模式I：跟小写一样，无差异o：向下换行进入编辑模式O：向上换行进入编辑模式a：光标向后移一位进入编辑模式A：光标向前移以为进入编辑模式s：删除当前字符进入编辑模式S：删除当前行进入编辑模式 搜索模式 12n：光标跟着关键字往下走N光标跟着关键字往上走 命令行模式 123456789w：保存q：退出q!：强制退出wq：保存退出!：强制wq!：强制保存退出set number：显示行号set no number：不显示行号14：定位到文本14行 date日期时间date：显示时间 date -s 2019-5-11：修改日期 date -s 10：00：00：修改时间 date -s “2019-5-11 10：00：00” ：修改日期时间 cal日历cal：显示日历 cal 05 2018：显示2018年5月日历 cal 2018：显示2018年日历 cp-r：递归 cp文件的selinux属性随着目的的属性而变化 mvmv文件的selinux属性跟着原属性走 pwd当前目录pwd：查看当前工作目录 rm删除-f：强制-r：递归-v：显示执行过程 &gt;重定向–stdin：标准输入 –stdout：标准输出 –stderr：标准错误 123456&gt; ：标准输出重定向（会覆盖文件所以内容，会损坏源文件）&gt;&gt;：标准输出的追加（最文本最末段添加，不会损坏源文件）&amp;&gt;：任何重定向2&gt;：标准错误的重定向2&gt;&gt;：标准错误的追加&amp;&gt;&gt;：任何追加 文件和文件夹的权限文件：合理权限至少是3以上的偶数（644） 文件夹：合理权限至少是3以上的偶数（755） find查找 find + 路径 + 选项 12345-name：按名称-group：按组查询-user：按用户查询-mtime +1：一天前-mtime +1：一天后 文本处理工具cat：查看文本中全部内容 more：查看文本中全部内容，第一行开始，一屏显示完后左下角有百分比，回车翻一行，空格翻一页 less：跟more对应，查看文本中全部内容，第一行开始，回车翻一行，空格翻一页，不会自动退出，退出按q grep：文本过滤 head：默认显示开头十行，-n指定行数 tail：跟head对应，默认显示最后十行，-n指定行数 wc：统计 12 19 27 846 passwd行数 单词 字节数 文件名 sort：默认字母顺序显示全部 123-d：字母顺序排列-r：字母倒叙排列-u：去重（重复的只显示一个） cut：切割 12-d：指定切割点-f：指定字段 进程管理process进程 ps：查看进程 12345678910111213141516171819202122232425262728-a：所有-u：用户-x：不连续终端user：用户pid：进程号cpu：CPU占用率mem：内存使用率vsz：虚拟内存使用率rss：真实内存使用tty：终端stat：状态start：起始时间time：使用时间command：执行的操作``` &gt; kill：杀死进程```text-9：立即杀死（强按电源4秒强杀进程）-15：整节杀死（正常关机杀死进程）&gt;在vim管理器普通模式下Ctrl+z将任务放入后台&gt; jobs：查看后台进程&gt; fg：调用恢复后台进程 计划任务 at：一次计划任务 123-l：查看-c 作业号：查看计划内容-d 作业号：删除计划任务 crontab：周而复始的计划任务 123456789101112-e：编辑-u：用户* * * * * command分 时 日 月 周 命令限制普通用户不能做计划任务：vim /etc/at.denyvim /etc/cron.deny允许用户做计划任务：touch /etc/cron.allow(一旦生产，全局生效，只允许这文件的用户做一次性计划任务，优先级大于at.deny)touch /etc/cron.allow(一旦生产，全局生效，只允许这文件的用户做周而复始的计划任务，优先级大于cron.deny) 磁盘类型12&gt; IDE接口：hard disk(hd)&gt; SATA/USB/SCSI接口：sata disk(sd) 磁盘管理磁盘分区 fdisk /dev/sdb 123456789n：新建分区p：打印分区d：删除分区t：更改分区idg：改为gpt架构l：列举已知的分区类型m：打印帮助手册w：保存q：退出 分区类型： 123主分区：最多4个，编号是1---4扩展分区：如果有，最多一个逻辑分区：是在扩展分区之下去做的。（不做扩展分区就不能做逻辑分区，编号从5开始） partprobe：磁盘探测 12rhel 5/7：partproberhel 6：partx -a：需执行两次 mkfs.xfs /dev/sdb1：重建系统文件（格式化） 挂载 mount：（临时挂载） vim /etc/fstab：（永久挂载） 12345678/dev/sdb1 /mnt/hgfs ext4 defaults 1 11：资源（设备，远程挂载服务）2：挂载点3：文件系统（也就是你格式化的那个玩意儿）4：选项（默认都是defaults，defaults包含了一个非常重要的选项，那就是rw权限）5：开机是否备份，0表示不备份，1表示备份6：开机是否检测，0表示不检测，1表示检测1次，2检测2次注意：一个资源可以挂多个地方，一个地方不能挂多个资源 逻辑卷 物理分区做成物理卷 1pvcreate /dev/sdb&#123;5,6&#125; 将物理卷组成卷组 123vgcreate redhat -s 16 /dev/sdb&#123;5,6&#125;#-s：指定PE大小#redhat：指定卷组名 pvs 123456Fmt：物理卷元数据格式Attr：物理卷元数据格式（lvm2 或者 lvm1）PSize：物理卷大小PFree：物理卷中的剩余空间Start：物理卷片段的起始物理扩展SSize：物理卷的片段大小 划分逻辑卷 12345#第一种方式：直接指定逻辑卷大小，使用的-Llvcreate -L 4G redhat -n cisco#第二种：使用PE大小创建逻辑卷lvcreate -l 50 redhat -n cisco 权限管理文件与文件夹的权限u：所属用户g：所属组o：其他用户 r：读w：写x：执行]]></content>
  </entry>
  <entry>
    <title><![CDATA[nmap的使用]]></title>
    <url>%2F2019%2F05%2F24%2Fnmap%E7%9A%84%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[端口扫描工具nmap的使用 nmap选项-r 顺序扫描端口 -O 操作系统检测 -sV 查看端口服务版本号 -sC 脚本扫描 -A 强力扫描（包含-O -sV -sC选项） -F 快速扫描100个常用端口 0 -Pn 禁用主机检测 注：如果主机屏蔽了ping请求，Nmap可能会认为该主机没有开机。这将使得Nmap无法进行进一 步检测，比如端口扫描、服务版本识别和操作系统识别等探测工作。为了克服这一问题，就 需要禁用Nmap的主机检测功能。在指定这个选项之后，Nmap会认为目标主机已经开机并会 进行全套的检测工作 -p 检测1-100号端口 -sP(sn) 使用ping命令检测局域网在线主机 -6 扫描ipv6的主机 -sU UDP扫描整个网段 -traceroute 路由跟踪扫描 -sS TCP SYN 扫描 (又称半开放,或隐身扫描)]]></content>
      <categories>
        <category>学习</category>
        <category>kali</category>
      </categories>
      <tags>
        <tag>kali</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo备份恢复命令]]></title>
    <url>%2F2019%2F05%2F22%2Fhexo%E5%A4%87%E4%BB%BD%E6%81%A2%E5%A4%8D%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[用于hexo备份恢复命令 123456789101112131415npm install hexo-cli -gnpm install hexo --savenpm installnpm install hexo-deployer-git -savegit initnpm install hexo-generator-feed --savenpm install hexo-generator-searchdb --savenpm i --save hexo-wordcount 博客自定义顺序123npm uninstall hexo-generator-index --savenpm install hexo-generator-index-pin-top --save]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux内核引导]]></title>
    <url>%2F2019%2F05%2F18%2F%E5%86%85%E6%A0%B8%E5%BC%95%E5%AF%BC%2F</url>
    <content type="text"><![CDATA[Redhat系Linux内核引导过程及开机破密码 linux允许级别 0:关机 1：single user mode 单用户模式 2：没有nfs多用户 3：有nfs多用户 4：未开发保留 5：图形化界面 6：reboot重启 linux开机步骤 开机会重载/etc/fstab文件，将系统设置为可读可写 开机破密码 1、把rhgb quiet替换成init=/bin/bash，按Ctrl+c提交 2、mount：查看根分区是不是ro 3、mount -o remount,rw / ：重新挂载 4、echo redhat | passwd –stdin root：修改密码 5、touch /.autorelabel：清除selinux标签 6、exec /sbin/init]]></content>
      <categories>
        <category>学习</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Redhat系网络工具]]></title>
    <url>%2F2019%2F05%2F18%2F%E7%BD%91%E7%BB%9C%E5%B7%A5%E5%85%B7%2F</url>
    <content type="text"><![CDATA[Redhat系安装网络工具的使用 wget本地下载资源 wget http://192.168.10.1/hub/xxx lftp下载 lftp：linux下的ftp 1234567get：下载（默认下载在当前目录）mget：批量下载mget -c：断点续传put：上传mput：批量上传lcd：下载路径mirror：下载文件夹 （-R 上传文件夹） elinks links 命令端网页文本方式显示工具 scp rsync scp：本地拷贝到远程，远程拷贝到本地，安全拷贝 rsync：文件同步 netstat端口监听 netstat -tpln：开启的网络端口 所有端口对应的服务都在/etc/service里 autofs自动挂载 autofs是一个服务，是能够自动卸载的挂载（auto.master）]]></content>
      <categories>
        <category>学习</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Redhat系安装autofs服务器]]></title>
    <url>%2F2019%2F05%2F18%2Fautofs%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD%2F</url>
    <content type="text"><![CDATA[Redhat系安装autofs自动挂载完整流程 设置网络 vim /etc/sysconfig/network-scripts/ifcfg-ens33 1234567TYPE=EthernetBOOTPROTO=staticNAME=ens33DEVICE=ens33ONBOOT=yesIPADDR=192.168.242.131NETMASK=255.255.255.0 systemctl restart network 配置网络yum源 cd /etc/yum.repos.d/ touch qzy.repo vim qzy.repo 12345[163]name=163enabled=1gpgcheck=0baseurl=http://mirrors.163.com/centos/7/os/x86_64 yum repolist 安装组件 yum install -y autofs* 开机自启 systemctl enable autofs 开启服务 systemctl restart autofs 创建映射文件 /etc/auto.fire #创建auto.*的文件 创建硬件资源 fdisk创建分区（自行创建，步骤已省略） 修改配置文件 vim /etc/auto.master /etc/auto.fire -O 1234567891011 主配置文件配置： /mnt/cdrom /etc/auto.fire --timeout=30 挂载点 映射文件名 超时时间 映射文件配置：map -fstype=iso9660 :/dev/cdrom触发点 挂载选项，文件类型 硬资源map2 -ro,soft,intr 192.168.10.1:/tmp/hub触发点 挂载选项 软资源 重启服务 systemctl restart autofs 触发 ls /mnt/cdrom/map 或者 cd /mnt/cdrom/map 查看 df -h 注意：该服务（配置文件，映射文件）不能使用空格，只能使用tab触发点为了更方便的挂载，一定是一个目录]]></content>
      <categories>
        <category>学习</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Redhat系安装nfs服务器]]></title>
    <url>%2F2019%2F05%2F15%2Fnfs%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[Redhat系安装nfs时间同步完整流程 #服务端# 设置网络 vim /etc/sysconfig/network-scripts/ifcfg-ens33 1234567TYPE=EthernetBOOTPROTO=staticNAME=ens33DEVICE=ens33ONBOOT=yesIPADDR=192.168.242.131NETMASK=255.255.255.0 systemctl restart network 配置网络yum源 cd /etc/yum.repos.d/ touch qzy.repo vim qzy.repo 12345[163]name=163enabled=1gpgcheck=0baseurl=http://mirrors.163.com/centos/7/os/x86_64 yum repolist 安装组件 yum install -y rpcbind nfs-utils nfs4-acl-tools 修改nfs配置文件 mkdir /redhat echo “/redhat 192.168.242.0/255.255.255.0(rw,no_root_squash,no_all_squash)” /etc/exports exportfs -v 防火墙开端口 firewall-cmd –add-service=nfs –permanent firewall-cmd –add-service=mountd –permanent firewall-cmd –add-service=rpc-bind –permanent firewall-cmd –reload 开启服务 systemctl restart nfs systemctl restart rpcbind systemctl enable nfs systemctl enable rpcbind 客户端设置网络 vim /etc/sysconfig/network-scripts/ifcfg-ens33 1234567TYPE=EthernetBOOTPROTO=staticNAME=ens33DEVICE=ens33ONBOOT=yesIPADDR=192.168.242.132NETMASK=255.255.255.0 systemctl restart network 安装组件 yum install -y rpcbind nfs-utils nfs4-acl-tools 开启服务 systemctl restart nfs systemctl restart rpcbind systemctl enable nfs systemctl enable rpcbind 挂载nfs网络存储 mount -t nfs 192.168.242.131:/redhat /mnt/redhat/ df -h]]></content>
      <categories>
        <category>学习</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Redhat系安装ntp服务器]]></title>
    <url>%2F2019%2F05%2F15%2Fntp%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[Redhat系安装ntp时间同步完整流程 服务端设置网络 vim /etc/sysconfig/network-scripts/ifcfg-ens33 1234567TYPE=EthernetBOOTPROTO=staticNAME=ens33DEVICE=ens33ONBOOT=yesIPADDR=192.168.242.131NETMASK=255.255.255.0 systemctl restart network 配置网络yum源 cd /etc/yum.repos.d/ touch qzy.repo vim qzy.repo 12345[163]name=163enabled=1gpgcheck=0baseurl=http://mirrors.163.com/centos/7/os/x86_64 yum repolist 安装组件 yum install -y ntp ntpdate 修改配置 vim /etc/ntp.conf 1234添加如下配置：restrict 192.168.242.0 mask 255.255.255.0 nomodify notrapserver 127.127.1.0fudge 127.127.1.0 stratum 10 重启服务 systemctl restart ntpd 修改防火墙 firewall-cmd –add-service=ntp –permanent firewall-cmd –reload firewall-cmd –list-all 重启服务 systemctl restart ntpd 修改时间 date -s 10:00:00 客户端设置网络 vim /etc/sysconfig/network-scripts/ifcfg-ens33 1234567TYPE=EthernetBOOTPROTO=staticNAME=ens33DEVICE=ens33ONBOOT=yesIPADDR=192.168.242.132NETMASK=255.255.255.0 systemctl restart network 配置网络yum源 cd /etc/yum.repos.d/ touch qzy.repo vim qzy.repo 12345[163]name=163enabled=1gpgcheck=0baseurl=http://mirrors.163.com/centos/7/os/x86_64 yum repolist 安装组件 yum install -y ntpdate 同步时间 ntpdate -u 192.168.242.131 查看时间 date]]></content>
      <categories>
        <category>学习</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Redhat系安装数据库]]></title>
    <url>%2F2019%2F05%2F15%2F%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[Redhat安装数据库完整流程 检查 MariaDB 是否安装 yum list installed | grep mariadb 卸载全部 MariaDB 相关 yum -y remove mariadb* 下载 MySQL 的 YUM 源 wget https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm 安装 MySQL 的 YUM 源 rpm -ivh mysql57-community-release-el7-11.noarch.rpm 检查 MySQL 的 YUM 源是否安装成功 yum repolist enabled | grep “mysql.-community.“ 查看 MySQL 版本 yum repolist all | grep mysql 安装 MySQL yum install mysql-community-server 启动 MySQL 服务 systemctl start mysqld 查看 MySQL 初始密码 cat /var/log/mysqld.log 测试连接 MySQL 服务 mysql -u root -p 修改密码强调要求 set global validate_password_policy=0; #允许设置弱密码set global validate_password_length=4; #最小长度 修改密码 set password for ‘root‘@’localhost’=password(‘123456’); 刷新权限 flush privileges; 防火墙设置 开放 3306 端口： firewall-cmd –permanent –zone=public –add-port=3306/tcp firewall-cmd –permanent –zone=public –add-port=3306/udp firewall-cmd –reload 如果是 CentOS 7，需要将 MySQL 服务加入防火墙，然后重启防火墙： firewall-cmd –zone=public –permanent –add-service=mysql systemctl restart firewalld 设置允许远程访问 grant all privileges on . to root@”%” identified by ‘0’; flush privileges; 相关命令 systemctl start mysqld #启动mysql systemctl stop mysqld #停止mysqld&gt; systemctl restart mysqld #重启mysqld systemctl enable mysqld #设置开机启动 systemctl status mysqld #查看 MySQL Server 状态 防火墙相关： systemctl status firewalld #查看防火墙状态 systemctl start firewalld #打开防火墙 systemctl stop firewalld #关闭防火墙 systemctl restart firewalld #重启防火墙]]></content>
      <categories>
        <category>学习</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Redhat系网卡链路聚合]]></title>
    <url>%2F2019%2F05%2F15%2F%E7%BD%91%E5%8D%A1%E9%93%BE%E8%B7%AF%E8%81%9A%E5%90%88%2F</url>
    <content type="text"><![CDATA[Redhat系网卡的链路聚合完整流程 配置网络yum源 cd /etc/yum.repos.d/ touch qzy.repo vim qzy.repo 12345[163]name=163enabled=1gpgcheck=0baseurl=http://mirrors.163.com/centos/7/os/x86_64 yum repolist 安装组件 yum install -y gcc git vim net-tools 拷贝配置模板 cd /usr/share/doc/teamd-1.25/example_ifcfgs/3 cp * /etc/sysconfig/network-scripts/ -v 查看记住网卡名称 ifconfig 更改网卡配置文件名与查看到的相对应 mv ifcfg-eth1 ifcfg-ens37mv ifcfg-eth2 ifcfg-ens38 更改网卡配置文件 vim ifcfg-ens37 12345DEVICE=&quot;ens37&quot;DEVICETYPE=&quot;TeamPort&quot;ONBOOT=&quot;yes&quot;TEAM_MASTER=&quot;team_test0&quot;TEAM_PORT_CONFIG=&apos;&#123;&quot;prio&quot;: -10, &quot;sticky&quot;: true&#125;&apos; vim ifcfg-ens38 12345DEVICE=&quot;ens38&quot;DEVICETYPE=&quot;TeamPort&quot;ONBOOT=&quot;yes&quot;TEAM_MASTER=&quot;team_test0&quot;TEAM_PORT_CONFIG=&apos;&#123;&quot;prio&quot;: -10, &quot;sticky&quot;: true&#125;&apos; cat ifcfg-team_test0 1234567DEVICE=&quot;team_test0&quot;DEVICETYPE=&quot;Team&quot;ONBOOT=&quot;yes&quot;BOOTPROTO=noneNETMASK=255.255.255.0IPADDR=192.168.9.66TEAM_CONFIG=&apos;&#123;&quot;runner&quot;: &#123;&quot;name&quot;: &quot;activebackup&quot;&#125;&#125;&apos; 重启网络 systemctl restart network 查看聚合链路 teamdctl team_test0 state 查看网卡 nmcli connection show]]></content>
      <categories>
        <category>学习</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Redhat系安装KVM虚拟机]]></title>
    <url>%2F2019%2F05%2F15%2Fkvm%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[Redhat系安装KVM虚拟机完整流程 设置网络、网桥 cd /etc/sysconfig/network-scripts/ vim ifcfg-eno16777736 123456TYPE=EthernetBOOTPROTO=staticNAME=eno16777736DEVICE=eno16777736ONBOOT=yesBRIDGE=br0 cp ifcfg-eno16777736 ifcfg-br0 1234567TYPE=BridgeBOOTPROTO=staticDEVICE=br0NAME=br0ONBOOT=yesIPADDR=192.168.10.1NETMASK=255.255.255.0 systemctl restart network 配置网络yum源 mkdir /mnt/hgfs cd /etc/yum.repos.d/ touch qzy.repo vim qzy.repo 12345[base]name=localenabled=1gpgcheck=0baseurl=file:///mnt/hgfs yum repolist 安装组件 yum install -y qemu-kvm libvirt* virt-manager 启动服务 systemctl restart libvirtd virt-manager]]></content>
      <categories>
        <category>学习</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Redhat系安装NextCloud私有云]]></title>
    <url>%2F2019%2F05%2F15%2Fnextcloud%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[Redhat系安装NextCloud私有云完整流程 搭建数据库检查 MariaDB 是否安装 yum list installed | grep mariadb 卸载全部 MariaDB 相关 yum -y remove mariadb* 下载 MySQL 的 YUM 源 wget https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm 安装 MySQL 的 YUM 源 rpm -ivh mysql57-community-release-el7-11.noarch.rpm 检查 MySQL 的 YUM 源是否安装成功 yum repolist enabled | grep “mysql.-community.“ 查看 MySQL 版本 yum repolist all | grep mysql 安装 MySQL yum install mysql-community-server 启动 MySQL 服务 systemctl start mysqld 查看 MySQL 初始密码 cat /var/log/mysqld.log 测试连接 MySQL 服务 mysql -u root -p 修改密码强调要求 set global validate_password_policy=0; #允许设置弱密码set global validate_password_length=4; #最小长度 修改密码 set password for ‘root‘@’localhost’=password(‘123456’); 刷新权限 flush privileges; 退出安装 PHP##安装 rpm 软件包（https://webtatic.com/packages）## rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm 安装 PHP 7.1（前三个是必须安装的，后面是打开 Nextcloud 后提示安装的） yum -y install php71w php71w-devel php71w-mysqlnd php71w-xml php71w-mbstring php71w-gd 安装 Apache安装 httpd yum -y install httpd 开机启动 httpd systemctl enable httpd 重新加载服务 systemctl daemon-reload 重启服务 systemctl start httpd.servic 防火墙添加 80 端口（permanent: 永久） firewall-cmd –zone=public –add-port=80/tcp –permanent 更新防火墙规则 firewall-cmd –reload 部署 Nextcloud安装 wget yum -y install wget 移动到 Apache 部署目录 cd /var/www/html 下载 Nextcloud 服务端 wget https://download.nextcloud.com/server/releases/nextcloud-15.0.7.zip 安装 unzip 解压程序 yum -y install unzip 解压服务端压缩包 unzip nextcloud-15.0.7.zip 赋予目录权限（R: 递归） chmod -R 777 nextcloud 永久关闭 SELinux（需重启） sed -i ‘/SELINUX/s/enforcing/disabled/‘ /etc/selinux/config 临时关闭 SELinux setenforce 0 设置 var/lib/php/session权限 chmod 777 /var/lib/php/* 启动 httpd systemctl start httpd.servic 配置NextCloud 浏览器打开 IP/nextcloud 配置]]></content>
      <categories>
        <category>学习</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[gnome常用插件]]></title>
    <url>%2F2019%2F01%2F20%2Fgnome%E5%B8%B8%E7%94%A8%E6%8F%92%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[打造一款属于自己的gonme桌面需要用到的插件 自动隐藏电池 如果电池已充满电并且已连接AC，请隐藏顶部面板中的电池图标。 咖啡因 禁用屏幕保护程序并自动暂停 剪贴板指示器 Gnome-Shell的剪贴板管理器扩展 - 将剪贴板指示符添加到顶部面板，并缓存剪贴板历史记录。 Coverflow Alt-Tab 替换Alt-Tab，以覆盖流方式遍历窗口。 短划线停靠 Gnome Shell的码头。此扩展将短划线移出概览，将其转换为扩展坞，以便更轻松地启动应用程序，并在窗口和桌面之间更快地切换。侧面和底部放置选项可用。 划线到面板 Gnome Shell的图标任务栏。此扩展将短划线移动到gnome主面板中，以便应用程序启动器和系统托盘组合成一个面板，类似于KDE Plasma和Windows 7+中的面板。不再需要单独的Dock，以便轻松访问正在运行和受欢迎的应用程序。 断开Wifi 在连接网络时，在状态菜单中为Wifi添加“断开连接”选项。网络断开后显示重新连接选项。 扩展更新通知程序 在扩展更新可用时显示通知。 互联网速度计 侏儒壳的简单和最小的互联网速度计。 OpenWeather 天气扩展可以显示来自https://openweathermap.org/或https://darksky.net的天气信息，适用于世界上几乎所有地点。 地点状态指示器 添加菜单以快速导航系统中的位置。 可移动驱动器菜单 用于访问和卸载可移动设备的状态菜单。 截图工具 方便地创建，复制，存储和上传屏幕截图 声音输入和输出设备选择器 在音量滑块下方的状态菜单中显示声音输出和输入设备列表（类似于gnome声音设置）。还显示相同设备的HDMI，扬声器等各种活动端口以供选择 系统监测 在gnome shell状态栏中显示系统信息，例如内存使用情况，CPU使用率，网络速率…… TopIcons Plus 此扩展程序将传统托盘图标（Gnome Shell的左下角）移动到顶部面板。它是来自ag原始扩展的分支，具有图标不透明度，饱和度，填充，大小和托盘位置的设置，以及一些小修复和与Skype集成扩展的集成。 用户主题 从用户目录加载shell主题。]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在Ubuntu上搭建个人博客系统Hexo]]></title>
    <url>%2F2019%2F01%2F19%2F%E5%9C%A8Ubuntu%E4%B8%8A%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9FHexo%2F</url>
    <content type="text"><![CDATA[ubuntu成为我的日常使用的系统后，特在网上摘取了一篇ubuntu搭建hexo的文章 准备环境安装 Git sudo apt install git-core -y 安装Node.js wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | shsource ~/.profilenvm install stable 安装 Hexo安装 cnpm npm install -g cnpm –registry=https://registry.npm.taobao.org 安装 Hexo先创建一个文件夹，然后进入到文件夹开始安装 1234mkdir hexocd hexocnpm install -g hexo-clihexo init 测试安装成功打开 Hexo 服务 hexo server **此时打开浏览器访问自己【主机的ip：4000】就可以看到我们搭建成功的博客页面。但是这仅仅是本地的，接下来把博客部署到 GitHub 上面我们就可以脱离本地访问了。 将博客部署到 GitHub注册 GitHub如果没有GitHub账户的先去去注册GitHub账户，有GitHub账户的直接下一步; 设置 user.name 和 user.email注册好之后回来自己的机器上 git config –global user.name “Your user.name”git config –global user.email “You user.email”//“ “里面换成自己的user.name和user.email; 生成 shh 密匙 ssh-keygen -t rsa -C user.email**下面提示输入要保存到的路径，直接回车就行了，默认保存到/home/ubuntu/.ssh/id_rsa 查看 shh 密匙 vim /home/ubuntu/.ssh/id_rsa 把密匙复制一下，接下来去 GitHub 账户下添加 SSH key； 在 GitHub 账户添加 SSH key添加 ssh key ，点击传送； 创建 GitHub 仓库 命名格式为”账户的userName”.github.io例如 ： zhangsan.github.io 去创建GitHub仓库) 修改 hexo 配置文件进入到自己的hexo 安装目录下 ，打开_config.yml文件 修改下面这部分； 1234&lt;pre&gt;`deploy: type: git repo: git@github.com:(BoView)/(BoView).github.io.git #括号里面换成自己的用户名和仓库名,去掉括号 branch: master 部署12345678//生成静态页面 hexo g //将public文件内容部署到github仓库 hexo d //这两条是常用的命令，后者也可以这样 hexo d -g //或者 hexo g -d 如果部署遇到错误，先执行下面这条命令 1npm install hexo-deployer-git –save 然后重新部署一下，此时可以打开浏览器访问userName.github.io(GitHub仓库名)即可以访问到搭建的博客页面到这里基本完成任务了，但是我们想更完美一点，再绑定个域名，然后用域名访问岂不美哉； 绑定域名添加解析记录去自己的域名下添加解析) 记录类型为 CNAME 主机记录为@ 线路选择默认，TTL选择600，记录值为github的仓库名userName.github.io 配置 hexo创建CNAME配置文件 touch ~/hexo/source/CNAME 下面在CNAME配置文件里面添加刚才解析的域名 例如： zhangsan.com 然后重新部署一下， ok，ok，恭喜大家， 此时打开浏览器访问自己的域名即可以访问自己搭建的博客 开启自己的【博客之旅】吧 hexo部署进阶命令Hexo博文置顶（自定义排序）如果目前已经有修改后支持置顶的仓库，可以直接用以下命令安装。 12npm uninstall hexo-generator-index --savenpm install hexo-generator-index-pin-top --save 使用的是top属性，top值越高，排序越在前，不设置top值得博文按照时间顺序排序。修改Hexo文件夹下的node_modules/hexo-generator-index/lib/generator.js 打开在最后添加如下javascript代码 12345678910111213posts.data = posts.data.sort(function(a, b) &#123;if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排&#125;else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233） return -1;&#125;else if(!a.top &amp;&amp; b.top) &#123; return 1;&#125;else return b.date - a.date; // 都没定义按照文章日期降序排&#125;); 在写文章的时候添加top属性就行了。 hexo增加RSS在你 Hexo 站点目录下： 1npm install hexo-generator-feed --save 打开 Hexo 站点下的 _config.yml ,添加如下配置： 12345678# feed# Dependencies: https://github.com/hexojs/hexo-generator-feedfeed: type: atom path: atom.xml limit: 20 hub: content: 本地搜索在你站点的根目录下 1npm install hexo-generator-searchdb --save 打开 Hexo 站点的 _config.yml,添加配置 12345search: path: search.xml field: post format: html limit: 10000 打开 themes/next/_config.yml ,搜索关键字 local_search ,设置为 true： 123456789# Local search# Dependencies: https://github.com/flashlab/hexo-generator-searchlocal_search: enable: true # if auto, trigger search by changing input # if manual, trigger search by pressing enter key or search button trigger: auto # show top n results per article, show all results by setting to -1 top_n_per_article: 1 统计功能，统计功能,显示文章字数统计,阅读时长,总字数在站点的根目录下： 1$ npm i --save hexo-wordcount 打开 themes/next/_config.yml ，搜索关键字 post_wordcount： 1234567891011# Post wordcount display settings# Dependencies: https://github.com/willin/hexo-wordcountpost_wordcount: item_text: true #字数统计 wordcount: true #预览时间 min2read: true #总字数,显示在页面底部 totalcount: true separated_meta: true 本地站点推送到GitHub上 在站点更目录下： 1$ npm install hexo-deployer-git --save 在 Hexo 站点的 _config.yml 中配置 deploy： 12345678# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: &lt;repository url&gt; #your github.io.git branch: master$ hexo clean$ hexo d --g hexo g #生成本地 public 静态文件, hexo d #部署到 Github 上, 也可以缩写成：hexo g –d 。 本文章摘自与gcchen的博客，在此感谢！]]></content>
      <categories>
        <category>Ubuntu</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
