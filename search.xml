<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[hexo安装命令]]></title>
    <url>%2F2019%2F01%2F19%2Fhexo%E5%AE%89%E8%A3%85%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[Hexo博文置顶（自定义排序）如果目前已经有修改后支持置顶的仓库，可以直接用以下命令安装。 12npm uninstall hexo-generator-index --savenpm install hexo-generator-index-pin-top --save 使用的是top属性，top值越高，排序越在前，不设置top值得博文按照时间顺序排序。修改Hexo文件夹下的node_modules/hexo-generator-index/lib/generator.js 打开在最后添加如下javascript代码 12345678910111213posts.data = posts.data.sort(function(a, b) &#123;if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排&#125;else if(a.top &amp;&amp; !b.top) &#123; // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233） return -1;&#125;else if(!a.top &amp;&amp; b.top) &#123; return 1;&#125;else return b.date - a.date; // 都没定义按照文章日期降序排&#125;); 在写文章的时候添加top属性就行了。 hexo增加RSS在你 Hexo 站点目录下： 1npm install hexo-generator-feed --save 打开 Hexo 站点下的 _config.yml ,添加如下配置： 12345678# feed# Dependencies: https://github.com/hexojs/hexo-generator-feedfeed: type: atom path: atom.xml limit: 20 hub: content: 本地搜索在你站点的根目录下 1npm install hexo-generator-searchdb --save 打开 Hexo 站点的 _config.yml,添加配置 12345search: path: search.xml field: post format: html limit: 10000 打开 themes/next/_config.yml ,搜索关键字 local_search ,设置为 true： 123456789# Local search# Dependencies: https://github.com/flashlab/hexo-generator-searchlocal_search: enable: true # if auto, trigger search by changing input # if manual, trigger search by pressing enter key or search button trigger: auto # show top n results per article, show all results by setting to -1 top_n_per_article: 1 统计功能，统计功能,显示文章字数统计,阅读时长,总字数在站点的根目录下： 1$ npm i --save hexo-wordcount 打开 themes/next/_config.yml ，搜索关键字 post_wordcount： 1234567891011# Post wordcount display settings# Dependencies: https://github.com/willin/hexo-wordcountpost_wordcount: item_text: true #字数统计 wordcount: true #预览时间 min2read: true #总字数,显示在页面底部 totalcount: true separated_meta: true 本地站点推送到GitHub上在站点更目录下： 1$ npm install hexo-deployer-git --save 在 Hexo 站点的 _config.yml 中配置 deploy： 12345678# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: &lt;repository url&gt; #your github.io.git branch: master$ hexo clean$ hexo d --g hexo g # 生成本地 public 静态文件, hexo d # 部署到 Github 上, 也可以缩写成：hexo g –d 。]]></content>
      <categories>
        <category>学习</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在Ubuntu上搭建个人博客系统Hexo]]></title>
    <url>%2F2019%2F01%2F19%2F%E5%9C%A8Ubuntu%E4%B8%8A%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9FHexo%2F</url>
    <content type="text"><![CDATA[基于 Ubuntu 搭建 Hexo 个人博客]背景 相比 wordpress，我更喜欢 Hexo 的简洁 ，然后就去找教程了，然后发现一些教程照着去做会报一些错误，可能因为环境差异的原因，然后综合了多个教程和各种网上扒报错终于把 Hexo 搭好了，然后整理了一下贴出来，希望能给想要搭建 Hexo 个人博客的大家一个参考，想先看看效果，欢迎访问我的Hexo 博客。 一、准备环境1、安装 Git sudo apt install git-core -y 2、安装Node.js wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | shsource ~/.profilenvm install stable 二、安装 Hexo1、安装 cnpm npm install -g cnpm –registry=https://registry.npm.taobao.org 2、安装 Hexo 先创建一个文件夹，然后进入到文件夹开始安装 12345&gt; mkdir hexo&gt; cd hexo/&gt; cnpm install -g hexo-cli&gt; hexo init&gt; 3、测试安装成功打开 Hexo 服务 hexo server **此时打开浏览器访问自己【主机的ip：4000】就可以看到我们搭建成功的博客页面。但是这仅仅是本地的，接下来把博客部署到 GitHub 上面我们就可以脱离本地访问了。 三、 将博客部署到 GitHub1、注册 GitHub如果没有GitHub账户的先去去注册GitHub账户，有GitHub账户的直接下一步; 2、设置 user.name 和 user.email注册好之后回来自己的机器上 git config –global user.name “Your user.name”git config –global user.email “You user.email”//“ “里面换成自己的user.name和user.email; 3、生成 shh 密匙 ssh-keygen -t rsa -C user.email**下面提示输入要保存到的路径，直接回车就行了，默认保存到/home/ubuntu/.ssh/id_rsa 4、查看 shh 密匙 vim /home/ubuntu/.ssh/id_rsa 把密匙复制一下，接下来去 GitHub 账户下添加 SSH key； 5、在 GitHub 账户添加 SSH key添加 ssh key ，点击传送； 6、创建 GitHub 仓库 命名格式为”账户的userName”.github.io例如 ： zhangsan.github.io 去创建GitHub仓库) 7、修改 hexo 配置文件进入到自己的hexo 安装目录下 ，打开_config.yml文件 修改下面这部分； 1234&lt;pre&gt;`deploy: type: git repo: git@github.com:(BoView)/(BoView).github.io.git #括号里面换成自己的用户名和仓库名,去掉括号 branch: master 8、部署12345678//生成静态页面 hexo g //将public文件内容部署到github仓库 hexo d //这两条是常用的命令，后者也可以这样 hexo d -g //或者 hexo g -d 如果部署遇到错误，先执行下面这条命令 npm install hexo-deployer-git –save 然后重新部署一下，此时可以打开浏览器访问userName.github.io(GitHub仓库名)即可以访问到搭建的博客页面到这里基本完成任务了，但是我们想更完美一点，再绑定个域名，然后用域名访问岂不美哉； 四、绑定域名1、添加解析记录去自己的域名下添加解析) 记录类型为 CNAME 主机记录为@ 线路选择默认，TTL选择600，记录值为github的仓库名userName.github.io 2、配置 hexo创建CNAME配置文件 touch ~/hexo/source/CNAME 下面在CNAME配置文件里面添加刚才解析的域名 例如： zhangsan.com 然后重新部署一下， ok，ok，恭喜大家， 此时打开浏览器访问自己的域名即可以访问自己搭建的博客 开启自己的【博客之旅】吧，]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
</search>
